name: 'Terraform Reusable Actions Workflow'

on:
  workflow_call:
    inputs:
      action:
        required: true
        type: string
        description: 'Action to perform: plan or apply'

env:
  TF_CLOUD_ORGANIZATION: 'LancelotPOrg'
  TF_API_TOKEN: '${{ secrets.TF_API_TOKEN }}'

jobs:
  terraform-global:
    name: 'Terraform ${{ inputs.action }} - Global'
    runs-on: ubuntu-latest

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TERRAFORM_CLOUD_TOKENS: app.terraform.io=${{ secrets.TF_API_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Terraform Plan Global
        if: inputs.action == 'plan'
        uses: dflook/terraform-plan@v2.1.0
        with:
          path: ./infrastructure/envs/global
          workspace: global
          label: Global
          variables: |
            github_access_token = "${{ secrets.GH_PAT_TOKEN }}"
            cloudflare_token = "${{ secrets.CF_API_TOKEN }}"
            cloudflare_zone_id = "${{ vars.CF_ZONE_ID }}"
            cloudflare_account_id = "${{ vars.CF_ACCOUNT_ID }}"

      - name: Terraform Apply Global
        if: inputs.action == 'apply'
        uses: dflook/terraform-apply@v2.1.0
        with:
          path: ./infrastructure/envs/global
          workspace: global
          label: Global
          variables: |
            github_access_token = "${{ secrets.GH_PAT_TOKEN }}"
            cloudflare_token = "${{ secrets.CF_API_TOKEN }}"
            cloudflare_zone_id = "${{ vars.CF_ZONE_ID }}"
            cloudflare_account_id = "${{ vars.CF_ACCOUNT_ID }}"

  terraform-env:
    name: 'Terraform ${{ inputs.action }} - ${{ matrix.environment }}'
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          # - environment: production
          #   workspace: production
          #   path: ./infrastructure/envs/production
          #   label: Production
          - environment: dev
            workspace: dev
            path: ./infrastructure/envs/dev
            label: Dev

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TERRAFORM_CLOUD_TOKENS: app.terraform.io=${{ secrets.TF_API_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Terraform Plan ${{ matrix.label }}
        if: inputs.action == 'plan'
        uses: dflook/terraform-plan@v2.1.0
        with:
          path: ${{ matrix.path }}
          workspace: ${{ matrix.workspace }}
          label: ${{ matrix.label }}
          variables: |
            github_access_token = "${{ secrets.GH_PAT_TOKEN }}"
            github_repo = "toolbox"
            scw_owner_id = "${{ secrets.SCW_OWNER_ID }}"
            scw_access_key = "${{ secrets.SCW_ORG_ACCESS_KEY }}"
            scw_secret_key = "${{ secrets.SCW_ORG_SECRET_KEY }}"
            scw_organization_id = "${{ secrets.SCW_ORG_ID }}"
            cf_zone_id = "${{ vars.CF_ZONE_ID }}"
            cf_token = "${{ secrets.CF_API_TOKEN }}"
            developers = {}
            api_subdomain = "api-dev"

      - name: Terraform Apply ${{ matrix.label }}
        if: inputs.action == 'apply'
        uses: dflook/terraform-apply@v2.1.0
        with:
          path: ${{ matrix.path }}
          workspace: ${{ matrix.workspace }}
          label: ${{ matrix.label }}
          variables: |
            github_access_token = "${{ secrets.GH_PAT_TOKEN }}"
            github_repo = "toolbox"
            scw_owner_id = "${{ secrets.SCW_OWNER_ID }}"
            scw_access_key = "${{ secrets.SCW_ORG_ACCESS_KEY }}"
            scw_secret_key = "${{ secrets.SCW_ORG_SECRET_KEY }}"
            scw_organization_id = "${{ secrets.SCW_ORG_ID }}"
            cf_zone_id = "${{ vars.CF_ZONE_ID }}"
            cf_token = "${{ secrets.CF_API_TOKEN }}"
            developers = {}
            api_subdomain = "api-dev"
